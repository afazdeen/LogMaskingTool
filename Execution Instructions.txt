1) Clone/Download the LogMaskingTool repository into your local repository.
2) Insert your log file into LogMaskingTool/Files/log.txt
3) Write a suitable script for your log file that captures all the required variables into LogMaskingTool/Files/script.txt (Example log and script files can be found in LogMaskingTool/Files/Examples)
4) Enter the following details into LogMaskingTool/Files/maskingScript.txt file to mask sensitive information.
		i)Enter your MySQL database connection string as follows - $DB_CONNECTION_STRING.SetDbString(hostname_username_password_databasename_port) (Example -> localhost_admin_admin_substitutiondb_0)
	   ii)Enter the variable names of the fields that require masking as follows - {$FIRST_NAME,$LAST_NAME,$TELEPHONE_NUMBER,$ADDRESS}:=LIST
	  iii)You can input one or all 16 available variable names into the above statement.
	   iv)The fields available are  FIRST_NAME, LAST_NAME, FULL_NAME, DATE, MONTH, YEAR, HOUR, MINUTE, SECONDS, TELEPHONE_NUMBER, ADDRESS, POSTAL_CODE, INTEGER, PRICE, NIC, EMAIL.
	    v)The variable names of the variables that you require to be masked in the script file should be same as the variable names provided in iv) above.
	   
5) Execute the FlexibleComputerLanguage1.exe found in LogMaskingTool/LDAL/cmake-build-debug
6) The masked log file will be created in LogMaskingTool/Files/maskedLog.txt
